import { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Pastprep",
  description: "Generated by create next app",
  icons: {
    icon: "/favicon.ico",           // Favicon icon
    apple: "/apple-touch-icon.png", // Apple touch icon
    shortcut: "/favicon.ico",       // Shortcut icon
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        {/* You can keep the traditional favicon links here too */}
        <link rel="icon" href="/favicon.ico" sizes="any" />
        <link rel="icon" href="/favicon-32x32.png" sizes="32x32" />
        <link rel="icon" href="/favicon-16x16.png" sizes="16x16" />
        <link rel="apple-touch-icon" href="/apple-touch-icon.png" sizes="180x180" />
        <link rel="shortcut icon" href="/favicon.ico" />
      </head>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        {children}
      </body>
    </html>
  );
}




// I'll help you with the Azure CLI commands to containerize your web app and revert it back. Based on your service details, here's what you need:
// To convert your web app to container-based deployment:
// bashCopy# First, configure the web app to use container
// az webapp config set --name pastprep \
//     --resource-group yousuf4594_group \
//     --linux-fx-version "DOCKER|node:20-lts"

// # Enable container deployment
// az webapp config container set --name pastprep \
//     --resource-group yousuf4594_group \
//     --docker-custom-image-name node:20-lts \
//     --docker-registry-server-url https://index.docker.io
// To revert back to code-based deployment:
// bashCopy# Reset the web app back to Node.js runtime
// az webapp config set --name pastprep \
//     --resource-group yousuf4594_group \
//     --linux-fx-version "NODE|20-lts"

// # Clear container settings
// az webapp config container delete --name pastprep \
//     --resource-group yousuf4594_group
// These commands:

// Use your exact resource group name (yousuf4594_group)
// Target your web app name (pastprep)
// Maintain the same Node.js version (20-lts) you're currently using

// Make sure you have Azure CLI installed and you're logged in before running these commands. Also, backup your application before making these changes.
// Would you like me to explain any part of these commands in more detail?